---
import type { CollectionEntry } from 'astro:content'
import { formattedDate } from '../utils/formattedDate'
import { truncateText } from '../utils/truncateText'
import { estReadingTime } from '../utils/estReadingTime'

interface Props {
  post: CollectionEntry<'posts'> & { content: string }
}

const { post } = Astro.props
const { title, pubDate, author, description } = post.data

// Ensure pubDate is a Date object
const date = new Date(pubDate)
const formattedPubDate = formattedDate({ date })

const maxDescriptionLength = 220 // Set the maximum length for the description excerpt
const readingTime = estReadingTime(post.content || '') // Ensure content is always a string
---

<article>
  <header>
    <h2><a href={`/blog/${post.slug}`}>{title}</a></h2>
    <small>{formattedPubDate} | Author: {author} | {readingTime} min read</small>
  </header>
  {description && <p class="description">{truncateText(description, maxDescriptionLength)}</p>}
  <a href={`/blog/${post.slug}`} class="read-more">
    Read more <span class="sr-only">about {title}</span>
  </a>
</article>

<style>
  article {
    padding: var(--spacing-md);
    border: 2px solid var(--color-primary);
    border-radius: var(--border-radius-md);
  }

  h2 {
    margin: 0;
    text-align: left;
  }

  h2 a {
    text-decoration: none;
    color: var(--color-primary);
  }

  .description {
    margin: var(--spacing-sm) 0;
    font-family: var(--font-family-base);
  }

  .read-more {
    display: inline-block;
    margin-top: var(--spacing-sm);
    font-family: var(--font-family-mono);
    font-size: var(--font-size-small);
  }

  .read-more:hover {
    text-decoration: none;
  }
</style>
