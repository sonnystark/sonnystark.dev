---
import { getCollection } from 'astro:content'
import MainLayout from '../../layouts/MainLayout.astro'
import { SITE_TITLE } from '../../consts'
import PostPreview from '../../components/PostPreview.astro'
import TagFilter from '../../components/TagFilter.astro'
import { getAllTags, filterPostsByTag } from '../../utils/blogFilters'
import { paginatePosts } from '../../utils/paginatePosts'

const POSTS_PER_PAGE = 6
const page = Number(Astro.url.searchParams.get('page')) || 1

const allPosts = await getCollection('posts')
const sortedPosts = allPosts.sort(
  (a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
)

const selectedTagRaw = Astro.url.searchParams.get('tag')
const selectedTag = selectedTagRaw
  ? decodeURIComponent(selectedTagRaw).trim().toLowerCase()
  : undefined
const allTags = getAllTags(sortedPosts)
const normalizedTags = allTags.map((tag) => tag.trim().toLowerCase())
const filteredPosts = filterPostsByTag(sortedPosts, selectedTag)
const { paginatedPosts, totalPages } = paginatePosts(filteredPosts, page, POSTS_PER_PAGE)
---

<MainLayout title={`Blog | ${SITE_TITLE}`}>
  <h1>Blog</h1>
  <TagFilter tags={allTags} normalizedTags={normalizedTags} selectedTag={selectedTag} />
  <section class="post-grid">
    {paginatedPosts.map((post) => <PostPreview post={{ ...post, content: post.body || '' }} />)}
  </section>
  {
    filteredPosts.length > POSTS_PER_PAGE && (
      <nav class="pagination">
        {Array.from({ length: totalPages }, (_, i) => (
          <a
            href={`?${selectedTag ? `tag=${encodeURIComponent(selectedTag)}&` : ''}page=${i + 1}`}
            class={page === i + 1 ? 'active' : ''}
          >
            {i + 1}
          </a>
        ))}
      </nav>
    )
  }
</MainLayout>

<style>
  .post-grid {
    display: grid;
    gap: var(--spacing-lg);
    margin-top: var(--spacing-lg);
  }
  .pagination {
    margin: var(--spacing-lg) 0;
    display: flex;
    gap: 0.5em;
    justify-content: center;
    align-items: center;
  }

  .pagination a {
    padding: 0.2em 0.8em;
    border-radius: var(--border-radius-sm, 4px);
    color: var(--color-primary);
    border: 2px solid var(--color-primary);
    text-decoration: none;
    font-family: var(--font-family-mono, 'Courier New', monospace);
    font-size: var(--font-size-small);
  }

  .pagination a.active,
  .pagination a:hover {
    color: var(--color-primary);
    border-color: var(--color-primary);
    opacity: 0.8;
  }
</style>
